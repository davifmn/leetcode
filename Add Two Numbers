/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

 #include <stack> 
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* nova = new ListNode(0); 
        ListNode* current = nova; 
        int carry = 0; 

        while (l1 != nullptr || l2 != nullptr || carry != 0) {
            int sum = carry; 
            
            if (l1 != nullptr) {
                sum += l1->val; // Adiciona o valor do nó atual de l1
                l1 = l1->next;  // Move para o próximo nó de l1
            }
            
            if (l2 != nullptr) {
                sum += l2->val; 
                l2 = l2->next;  
            }
            
            carry = sum / 10; 
            current->next = new ListNode(sum % 10); 
            current = current->next; 
        }
        
        return nova->next; 
    }
};
